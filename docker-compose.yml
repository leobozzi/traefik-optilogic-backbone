# Compose file odoo Optilogic and Backbone v13.0 + https
# Ojo hay que crear el /odoo_ar/traefik/acme.json y ponerle chmod 600
# Version 2021-11-11
#################################################################################

version: '3.5'

services:
    traefik:
        image: traefik:2.3.7
        container_name: traefik
        restart: unless-stopped
        command:
            - --entrypoints.web.address=:80
            - --entryPoints.websecure.address=:443

            #- --log.level=DEBUG # Don't do that in production
            - --providers.docker
            #- --api.insecure # Don't do that in production
            #- --api.debug # Don't do that in production

            - --certificatesresolvers.le.acme.email=lbozzi@gmail.com
            - --certificatesresolvers.le.acme.storage=/opt/traefik/acme.json
            - --certificatesresolvers.le.acme.httpChallenge=true
            - --certificatesresolvers.le.acme.httpChallenge.entryPoint=web
            #- --certificatesresolvers.le.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory # descoment for staging
        ports:
            - "80:80"
            - "443:443"
            #- "8080:8080"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - /odoo_ar/traefik/:/opt/traefik/

    postgres-opt:
        image: postgres:12.10-alpine
        container_name: pg-optilogic
        restart: unless-stopped
        environment:
            - POSTGRES_USER=odoo
            - POSTGRES_PASSWORD=odoo
        volumes:
            - ${PROJECT_PATH_OPT}/postgresql:/var/lib/postgresql/data

    odoo-opt:
        image: ${ODOO_IMAGE_OPT}
        container_name: odoo-opt
        restart: unless-stopped
        volumes:
            - ${PROJECT_PATH_OPT}/config:/opt/odoo/etc/
            - ${PROJECT_PATH_OPT}/data_dir:/opt/odoo/data
            - ${PROJECT_PATH_OPT}/log:/var/log/odoo
            - ${PROJECT_PATH_OPT}/sources:/opt/odoo/custom-addons
            - ${PROJECT_PATH_OPT}/backup_dir:/var/odoo/backups/
        links:
            - postgres-opt:db
        environment:
            - SERVER_MODE=
        labels:
            # router rou-odoo --> Acceso a odoo en puerto 80
            - traefik.http.routers.rou-odoo-opt.rule=Host(`${SITE_DOMAIN_OPT}`)
            - traefik.http.routers.rou-odoo-opt.entrypoints=web
            - traefik.http.routers.rou-odoo-opt.service=srv-odoo-opt-secure

            # router rou-chat --> Acceso a /longpolling en puerto 80
            - traefik.http.routers.rou-chat-opt.rule=Host(`${SITE_DOMAIN_OPT}`) && PathPrefix(`/longpolling`)
            - traefik.http.routers.rou-chat-opt.entrypoints=web
            - traefik.http.routers.rou-chat-opt.service=srv-chat-opt-secure

            # Middleware para comprimir paginas.
            - traefik.http.middlewares.compress.compress=true

            # Middleware para redireccionar redireccion http -> https
            - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
            - traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true

            # Asigno los middlewares de redireccion a los routers
            - traefik.http.routers.rou-odoo-opt.middlewares=redirect-to-https@docker
            - traefik.http.routers.rou-chat-opt.middlewares=redirect-to-https@docker

            # router rou-odoo-secure --> Acceso a odoo en puerto 443
            - traefik.http.routers.rou-odoo-opt-secure.rule=Host(`${SITE_DOMAIN_OPT}`)
            - traefik.http.routers.rou-odoo-opt-secure.tls=true
            - traefik.http.routers.rou-odoo-opt-secure.tls.certresolver=le
            - traefik.http.routers.rou-odoo-opt-secure.entrypoints=websecure

            # Redirecciona rou-odoo-secure al puert 8069 donde escucha odoo
            - traefik.http.routers.rou-odoo-opt-secure.service=srv-odoo-opt-secure
            - traefik.http.services.srv-odoo-opt-secure.loadbalancer.server.port=${HTTP_PORT_OPT}

            # Router rou-chat-secure --> Acceso a odoo en puerto 443
            - traefik.http.routers.rou-chat-opt-secure.rule=(Host(`${SITE_DOMAIN_OPT}`)) && PathPrefix(`/longpolling`)
            - traefik.http.routers.rou-chat-opt-secure.tls=true
            - traefik.http.routers.rou-chat-opt-secure.tls.certresolver=le
            - traefik.http.routers.rou-chat-opt-secure.entrypoints=websecure

            # redirecciona rout-chat-secure al puerto 8072 donde odoo escucha el longpolling
            - traefik.http.routers.rou-chat-opt-secure.service=srv-chat-opt-secure
            - traefik.http.services.srv-chat-opt-secure.loadbalancer.server.port=${LONGPOLLING_PORT_OPT}

    postgres-bbn:
        image: postgres:12.10-alpine
        container_name: pg-backbone
        restart: unless-stopped
        environment:
            - POSTGRES_USER=odoo
            - POSTGRES_PASSWORD=odoo
        volumes:
            - ${PROJECT_PATH_BBN}/postgresql:/var/lib/postgresql/data

    odoo-bbn:
        image: ${ODOO_IMAGE_BBN}
        container_name: odoo-bbn
        restart: unless-stopped
        volumes:
            - ${PROJECT_PATH_BBN}/config:/opt/odoo/etc/
            - ${PROJECT_PATH_BBN}/data_dir:/opt/odoo/data
            - ${PROJECT_PATH_BBN}/log:/var/log/odoo
            - ${PROJECT_PATH_BBN}/sources:/opt/odoo/custom-addons
            - ${PROJECT_PATH_BBN}/backup_dir:/var/odoo/backups/
        links:
            - postgres-bbn:db
        environment:
            - SERVER_MODE=
        labels:
            # router rou-odoo --> Acceso a odoo en puerto 80
            - traefik.http.routers.rou-odoo-bbn.rule=Host(`${SITE_DOMAIN_BBN}`)
            - traefik.http.routers.rou-odoo-bbn.entrypoints=web
            - traefik.http.routers.rou-odoo-bbn.service=srv-odoo-bbn-secure

            # router rou-chat --> Acceso a /longpolling en puerto 80
            - traefik.http.routers.rou-chat-bbn.rule=Host(`${SITE_DOMAIN_BBN}`) && PathPrefix(`/longpolling`)
            - traefik.http.routers.rou-chat-bbn.entrypoints=web
            - traefik.http.routers.rou-chat-bbn.service=srv-chat-bbn-secure

            # Middleware para comprimir paginas.
            - traefik.http.middlewares.compress.compress=true

            # Middleware para redireccionar redireccion http -> https
            - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
            - traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true

            # Asigno los middlewares de redireccion a los routers
            - traefik.http.routers.rou-odoo-bbn.middlewares=redirect-to-https@docker
            - traefik.http.routers.rou-chat-bbn.middlewares=redirect-to-https@docker

            # router rou-odoo-secure --> Acceso a odoo en puerto 443
            - traefik.http.routers.rou-odoo-bbn-secure.rule=Host(`${SITE_DOMAIN_BBN}`)
            - traefik.http.routers.rou-odoo-bbn-secure.tls=true
            - traefik.http.routers.rou-odoo-bbn-secure.tls.certresolver=le
            - traefik.http.routers.rou-odoo-bbn-secure.entrypoints=websecure

            # Redirecciona rou-odoo-secure al puert 8069 donde escucha odoo
            - traefik.http.routers.rou-odoo-bbn-secure.service=srv-odoo-bbn-secure
            - traefik.http.services.srv-odoo-bbn-secure.loadbalancer.server.port=${HTTP_PORT_BBN}

            # Router rou-chat-secure --> Acceso a odoo en puerto 443
            - traefik.http.routers.rou-chat-bbn-secure.rule=(Host(`${SITE_DOMAIN_BBN}`)) && PathPrefix(`/longpolling`)
            - traefik.http.routers.rou-chat-bbn-secure.tls.certresolver=le
            - traefik.http.routers.rou-chat-bbn-secure.tls=true
            - traefik.http.routers.rou-chat-bbn-secure.entrypoints=websecure

            # redirecciona rout-chat-secure al puerto 8072 donde odoo escucha el longpolling
            - traefik.http.routers.rou-chat-bbn-secure.service=srv-chat-bbn-secure
            - traefik.http.services.srv-chat-bbn-secure.loadbalancer.server.port=${LONGPOLLING_PORT_BBN}
